1. Using a remote repository



When would you want to use a remote repository rather than keeping all your work local?



-When you are collaborating with others on a project or want to share a project for feedback. 
You might also want to use a remote repository in order to have your repository saved somewhere
in addition to your local computer.


2. Manual vs. automatic pull

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

-Git could pull changes way more often than you want & before the changes are ready to be shared.

3. Forks, Clones, and Branches

Describe the differences between forks, clones, and branches. When would you use one instead of another?

-Fork: cloned repository on GitHub (so you can keep a copy of a repository, make personal changes to it, and give credit to original creator). Clone: copy of a repository that is created on your local PC. Branch: In a repository, offshoot of the master that lets you explore, create, or alter without affecting the master (you can later merge with the master if desired).
You would use a fork to simplify the process of cloning someone else's public repository while giving them credit at the same time. You clone a repository to get a copy of it on your local machine. Use a branch to work on a new feature, idea, w/e separate from (and without affecting) the master of a repository. 

4. Local copies of remote branches

What is the benefit of having a copy of the last known state of the remote stored locally?

-You will be able to see the latest updates to the remote and work with/on them locally. This could be very handy if you are going to be away from internet for a while and still want to work on the project.

5. Collaboration using Git and GitHub

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

-I'm not certain, maybe one of the other version-control programs such as Subversion have a similar system (I'm not familiar). Or maybe you would trying using email or Google Docs. Regardless, it seems to me that it would be more difficult than GitHub because GitHub shows changes between files, sends an email alert that a pull request has been made, allows comments on requests,etc. This looks to be a very simple, nice way of organizing collaboration. 